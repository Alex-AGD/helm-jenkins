namespace: ci-cd
replicaCount: 1

image:
  repository: jfrog.it-academy.by/public/jenkins-ci
  tag: aleksey_do
  pullPolicy: IfNotPresent

jenkins:
  fullname: jenkins
  enabled: true

  config:
    numExecutors: 2
    jenkinsUrl: "http://jenkins:8080"
    installWizard: false

  kubernetesCloud:
    containerCapStr: "10"
    maxRequestsPerHostStr: "32"
    namespace: ci-cd
    skipTlsVerify: true

github:
  credentials:
    id: some_randome
    username: Alex-AGD
    password: cGFzcw==

ingress:
  enabled: true
  className: nginx
  host: jenkins.k8s-5.sa
  servicePort: 8080
  path: /
  pathType: Prefix

rbac:
  create: true
  clusterAdminRole: true

resources:
 requests:
  cpu: 2
  memory: 2Gi
 limits:
  cpu: 3
  memory: 3Gi

volumeMounts:
  - name: jenkins-auth-config
    mountPath: /var/jenkins_home/init.groovy.d/basic-security.groovy
    subPath: basic-security.groovy
  - name: jenkins-config-yaml
    mountPath: /var/jenkins_home/casc_configs/jenkins.yaml
    subPath: jenkins.yaml
  - name: jenkins-config
    mountPath: /var/jenkins_home

volumes:
  - name: jenkins-auth-config
    configMap:
      name: basic-security
  - name: jenkins-config-yaml
    configMap:
      name: jenkins-config
  - name: jenkins-config
    nfs:
      server: 192.168.37.105
      path: /mnt/IT-Academy/nfs-data/sa2-30-24/alex_agd/jenkins

credentials:
  admin:
    username: YWRtaW4=
    user: admin
    pass: pass
    password: cGFzcw==
    email: monamax01@gmail.com
    url: "http://jenkins.k8s-5.sa/"
    existingSecret: jenkins-secret

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

env:
  - name: PASS
    valueFrom:
      secretKeyRef:
        name: jenkins-secret
        key: password
  - name: JAVA_OPTS
    value: "-Djenkins.install.runSetupWizard=false"
  - name: CASC_JENKINS_CONFIG
    value: /var/jenkins_home/casc_configs/jenkins.yaml

service:
  port: 8080
  master:
    port: 8080
    targetPort: 8080
  slave:
    port: 50000
    targetPort: 50000

nodeSelector: {}

tolerations: []

affinity: {}